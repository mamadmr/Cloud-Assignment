services:
  fastapi:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "50000:50000"
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock  # Mount Docker socket
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      - redis
      - postgres
    networks:
      - ctf_network
    command: uvicorn challenge_management:app --host 0.0.0.0 --port 50000 --reload

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock  # Mount Docker socket
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      - redis
      - postgres
    networks:
      - ctf_network
    command: celery -A celery_docker_ctf worker --loglevel=info --pool=solo

  redis:
    image: redis
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - ctf_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=I0UseStrongPasswordsLikeThis
      - POSTGRES_DB=postgres
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - ctf_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  ctf_network:
    driver: bridge

volumes:
  pg_data:
  redis_data: