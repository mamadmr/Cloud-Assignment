version: '3.8'

services:
  db:
    image: postgres:14
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    restart: always
    env_file:
      - .env

  web:
    build: .
    restart: always
    env_file:
      - .env
    ports:
      - "${WEB_PORT}:${WEB_PORT}"
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - db
      - redis
    
    command: sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:${WEB_PORT}"

  celery:
    build: .
    restart: always
    env_file:
      - .env
    command: celery -A core worker --loglevel=info
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - db
      - redis

volumes:
  pgdata:
