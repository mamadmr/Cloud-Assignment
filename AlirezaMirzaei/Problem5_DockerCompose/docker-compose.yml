version: "3.8"

services:
  postgres_ctf:
    image: postgres:14-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - ctf_net

  redis-server:
    image: redis:6-alpine
    restart: unless-stopped
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    volumes:
      - ../Problem2_Redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
      - ../Problem2_Redis/redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - ctf_net

  celery_worker:
    build: ../Problem4_WebAPI
    working_dir: /usr/src/app
    command: >
      celery -A celery_app.celery_app
             --loglevel=info
             worker
    env_file:
      - .env
    depends_on:
      - redis-server
      - postgres_ctf
    volumes:
      - ../Problem4_WebAPI:/usr/src/app
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - ctf_net

  web:
    build: ../Problem4_WebAPI
    working_dir: /usr/src/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - postgres_ctf
      - redis-server
      - celery_worker
    volumes:
      - ../Problem4_WebAPI:/usr/src/app
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - ctf_net

volumes:
  pgdata:
  redis_data:

networks:
  ctf_net:
    driver: bridge
